//
//  Util.swift
//  iosApp
//
//  Created by Sergey Lee on 2021/12/04.
//

import Foundation
import SwiftUI

class Util {
        func parseCategory(category: String) -> [String] {
            var list: [String] = []
            if category == "zavod" {
                list.append("üè≠")
                list.append("–ó–∞–≤–æ–¥")
            } else if category == "motel" {
                list.append("üè©")
                list.append("–ú–æ—Ç–µ–ª—å")
            } else if category == "stroyka" {
                list.append("üë∑üèª‚Äç‚ôÄÔ∏è")
                list.append("–°—Ç—Ä–æ–π–∫–∞")
            } else if category == "shchiktan" {
                list.append("üçΩ")
                list.append("–û–±—â–µ–ø–∏—Ç")
            } else if category == "selkhoz" {
                list.append("üßëüèΩ‚Äçüåæ")
                list.append("–°–µ–ª—å—Ö–æ–∑ —Ä–∞–±–æ—Ç—ã")
            } else if category == "pochta" {
                list.append("üì¶")
                list.append("–ü–æ—á—Ç–∞")
            } else if category == "ofis" {
                list.append("üíº")
                list.append("–û—Ñ–∏—Å")
            } else if category == "rabota_drugoye" {
                list.append("üë®‚ÄçüöÄ")
                list.append("–î—Ä—É–≥–∞—è —Ä–∞–±–æ—Ç–∞")
            } else if category == "kia" {
                list.append("üöô")
                list.append("KIA")
            } else {
                list.append("")
                list.append("")
            }
            return list
        }
    
    func formatDate(date: String) -> String {
        let dateFormatterGet = DateFormatter()
        dateFormatterGet.dateFormat = "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
        let dateFormatterPrint = DateFormatter()
        dateFormatterPrint.dateFormat = "dd MMMM yyyy –≥."
        dateFormatterPrint.locale = Locale(identifier: "ru_RU")
        let date: Date? = dateFormatterGet.date(from: date)
        
        return dateFormatterPrint.string(from: date! as Date)
        
    }
    
}

struct FilterView: View {
    @State private var city = "–í—Å–µ –≥–æ—Ä–æ–¥–∞"
    @State var list: [Service] = []
    @State var unsortedList: [Service] = []
    var body: some View {
        Menu {
            Button {
                self.list = self.unsortedList
                city = "–í—Å–µ –≥–æ—Ä–æ–¥–∞"
            } label: {
                Text("–í—Å–µ –≥–æ—Ä–æ–¥–∞")
            }
            Button {
                self.list = self.unsortedList
                city = "–ê–Ω—Å–∞–Ω"
                self.list = list.filter { $0.city == city }
            } label: {
                Text("–ê–Ω—Å–∞–Ω")
            }
            Button {
                self.list = self.unsortedList
                city = "–•–≤–∞—Å–æ–Ω–≥"
                self.list = list.filter { $0.city == city }
            } label: {
                Text("–•–≤–∞—Å–æ–Ω–≥")
            }
            Button {
                self.list = self.unsortedList
                city = "–ò–Ω—á—Ö–æ–Ω"
                self.list = list.filter { $0.city == city }
            } label: {
                Text("–ò–Ω—á—Ö–æ–Ω")
            }
            Button {
                self.list = self.unsortedList
                city = "–°–µ—É–ª"
                self.list = list.filter { $0.city == city }
            } label: {
                Text("–°–µ—É–ª")
            }
            Button {
                self.list = self.unsortedList
                city = "–ê—Å–∞–Ω-–°–∏–Ω—á–∞–Ω–≥"
                self.list = list.filter { $0.city == city }
            } label: {
                Text("–ê—Å–∞–Ω-–°–∏–Ω—á–∞–Ω–≥")
            }
            Button {
                self.list = self.unsortedList
                city = "–ß—Ö–æ–Ω–∞–Ω"
                self.list = list.filter { $0.city == city }
            } label: {
                Text("–ß—Ö–æ–Ω–∞–Ω")
            }
            Button {
                self.list = self.unsortedList
                city = "–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥"
                self.list = list.filter { $0.city != "–ß—Ö–æ–Ω–∞–Ω" && $0.city != "–•–≤–∞—Å–æ–Ω–≥" && $0.city != "–ê–Ω—Å–∞–Ω" && $0.city != "–ê—Å–∞–Ω-–°–∏–Ω—á–∞–Ω–≥" && $0.city != "–°–µ—É–ª" && $0.city != "–ò–Ω—á—Ö–æ–Ω" && $0.city != "–•–≤–∞—Å–æ–Ω–≥"}
            } label: {
                Text("–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥")
            }
        } label: {
            //                Image(systemName: "eye.circle")
            Text(city)
        }
    }
}
